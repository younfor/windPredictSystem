source('E:/R code NN/To the server/Rwindspeed_nnet/ws_nnet_bootstrap.R')
source('E:/R code NN/To the server/Rwindspeed_nnet/ws_nnet_bootstrap.R')
source('E:/R code NN/To the server/Rwindspeed_nnet/ws_nnet_bootstrap.R')
source('E:/R code NN/To the server/Rwindspeed_nnet/ws_nnet_bootstrap.R')
source('E:/R code NN/To the server/Rwindspeed_nnet/ws_nnet_bootstrap.R')
nn1=seq(1:nn)
y1_in=x2[1:nn]
y1_out=x2[(nn+1):384]
par(mfrow=c(2,2))
pred_ave_in=colMeans(predict1_in)
pred_ave_out=colMeans(predict1_out)
write.table(matrix(pred_ave_out, ncol=length(pred_ave_out)), "wind prediction_out_ave.csv",append = FALSE, sep=",", row.names=FALSE,  col.names=FALSE)
write.table(matrix(pred_ave_in, ncol=length(pred_ave_in)), "wind prediction_in_ave.csv",append = FALSE, sep=",", row.names=FALSE,  col.names=FALSE)
library(matrixStats)
predict_in_var=colVars(predict1_in)
predict_in_std=colSds(predict1_in)
predict_in_std_high=pred_ave_in +predict_in_std*1.96
predict_in_std_low =pred_ave_in -predict_in_std*1.96
write.table(matrix(predict_in_std_high, ncol=length(predict_in_std_high)), "wind prediction_in_ave high.csv",append = FALSE, sep=",", row.names=FALSE,  col.names=FALSE)
write.table(matrix(predict_in_std_low, ncol=length(predict_in_std_low)), "wind prediction_in_ave low.csv",append = FALSE, sep=",", row.names=FALSE,  col.names=FALSE)
predict_out_var=colVars(predict1_out)
predict_out_std=colSds(predict1_out)
predict_out_std_high=pred_ave_out +predict_out_std*1.96
predict_out_std_low=pred_ave_out -predict_out_std*1.96
write.table(matrix(predict_out_std_high, ncol=length(predict_out_std_high)), "wind prediction_out_ave high.csv",append = FALSE, sep=",", row.names=FALSE,  col.names=FALSE)
write.table(matrix(predict_out_std_high, ncol=length(predict_out_std_high)), "wind prediction_out_ave low.csv",append = FALSE, sep=",", row.names=FALSE,  col.names=FALSE)
ylim_low= min(data2$V1[nn1], y1_out,predict_out_std_low)-1
ylim_high= max(data2$V1[nn1],y1_out,predict_out_std_high)+1
nn1_out=seq(1:84)
plot(nn1_out,y1_out,type="l", col="blue" ,lwd = 2,ylim=c(ylim_low, ylim_high), ylab="Wind speed" , xlab="Hour", col.lab="blue" )
title(main = "Out-of-sample prediction (simple mean)", col.main="red")
lines(pred_ave_out, col="red",lwd = 2 )
lines(predict_out_std_low, col="green",lwd = 2 )
lines(predict_out_std_high, col="green",lwd = 2)
pdf("out ofsample mean.pdf")
plot(nn1_out,y1_out,type="l", col="blue" ,lwd = 2,ylim=c(ylim_low, ylim_high), ylab="Wind speed" , xlab="Hour", col.lab="blue" )
title(main = "Out-of-sample prediction (simple mean)", col.main="red")
lines(pred_ave_out, col="red",lwd = 2 )
lines(predict_out_std_low, col="green",lwd = 2 )
lines(predict_out_std_high, col="green",lwd = 2)
dev.off()
#pred_ave_in=colMeans(predict1_in)
ylim_low= min(data2$V1[nn1], y1_in,predict_in_std_low)-1
ylim_high= max(data2$V1[nn1],y1_in,predict_in_std_high)+1
plot(nn1,y1_in,  ylim=c(ylim_low, ylim_high) , xlim=c(1, nn), type="l", col="blue", lwd = 2 ,ylab="Wind speed" , xlab="Hour", col.lab="blue" )
title(main = "In-sample prediction (simple mean)",col.main="red")
lines(pred_ave_in, col="red",lwd = 2   )
lines(predict_in_std_low, col="green",lwd = 2  )
lines(predict_in_std_high, col="green",lwd = 2)
pdf("in sample simple mean.pdf")
plot(nn1,y1_in,  ylim=c(ylim_low, ylim_high) , xlim=c(1, nn), type="l", col="blue", lwd = 2 ,ylab="Wind speed" , xlab="Hour", col.lab="blue" )
title(main = "In-sample prediction (simple mean)",col.main="red")
lines(pred_ave_in, col="red",lwd = 2   )
lines(predict_in_std_low, col="green",lwd = 2  )
lines(predict_in_std_high, col="green",lwd = 2)
dev.off()
# pred_ave_in=colMeans(predict1_in)
# pred_ave_out=colMeans(predict1_out)
#
# write.table(matrix(pred_ave_out, ncol=length(pred_ave_out)), "wind prediction_out_weight ave.csv",append = FALSE, sep=",", row.names=FALSE,  col.names=FALSE)
#
# write.table(matrix(pred_ave_in, ncol=length(pred_ave_in)), "wind prediction_in_weight ave.csv",append = FALSE, sep=",", row.names=FALSE,  col.names=FALSE)
#
mean_matrix_in=t(matrix(rep(pred_ave_in, rep1), nrow=nn))
temp=(predict1_in-mean_matrix_in)
P=temp%*%t(temp)+diag(rep1)
library(quadprog)
d=matrix(0, nrow=1, ncol=rep1)
A=diag(rep1)
a1=matrix(1, nrow=rep1)
A=cbind(a1, A)
b=matrix(0, ncol=rep1+1)
b[1]=1
sol = solve.QP (P, -d, A, b,meq=1)
weight=sol$solution
pred_out_ave=weight%*%predict1_out
pred_in_ave=weight%*%predict1_in
write.table(matrix(pred_ave_out, ncol=length(pred_ave_out)), "wind prediction_out_weight ave.csv",append = FALSE, sep=",", row.names=FALSE,  col.names=FALSE)
write.table(matrix(pred_ave_in, ncol=length(pred_ave_in)), "wind prediction_in_weight ave.csv",append = FALSE, sep=",", row.names=FALSE,  col.names=FALSE)
# calculate confidence intervals
predict_out_matrix=t(matrix(rep(pred_out_ave[1,],rep1),nrow=84, ncol=rep1))
predict_out_std=sqrt( weight%*%(predict_out_matrix-predict1_out)^2/(1-sum(weight^2)))
predict_out_std_high=pred_out_ave[1,] +predict_out_std[1,]*1.96
predict_out_std_low=pred_out_ave[1,] -predict_out_std[1,]*1.96
write.table(matrix(predict_out_std_high, ncol=length(predict_out_std_high)), "wind prediction_out_weight ave high.csv",append = FALSE, sep=",", row.names=FALSE,  col.names=FALSE)
write.table(matrix(predict_out_std_high, ncol=length(predict_out_std_high)), "wind prediction_out_weight ave low.csv",append = FALSE, sep=",", row.names=FALSE,  col.names=FALSE)
ylim_low= min( data2[-nn1,],predict_out_std_low)-1
ylim_high= max(data2[-nn1,],predict_out_std_high)+1
plot(nn1_out, data2[-nn1,], ylim=c(ylim_low, ylim_high) , xlim=c(1, 84),type="l", col="blue" ,lwd = 2 ,ylab="Wind speed" , xlab="Hour", col.lab="blue")
title(main = "Out-of-sample prediction (weighted mean)",col.main="red")
lines(pred_out_ave[1,], col="red",lwd = 2   )
lines(predict_out_std_low, lwd=2, col="green")
lines(predict_out_std_high, lwd=2,col="green")
pdf("out of sample weighted mean.pdf")
plot(nn1_out, data2[-nn1,], ylim=c(ylim_low, ylim_high) , xlim=c(1, 84),type="l", col="blue" ,lwd = 2 ,ylab="Wind speed" , xlab="Hour", col.lab="blue")
title(main = "Out-of-sample prediction (weighted mean)",col.main="red")
lines(pred_out_ave[1,], col="red",lwd = 2   )
lines(predict_out_std_low, lwd=2, col="green")
lines(predict_out_std_high, lwd=2,col="green")
dev.off()
predict_in_matrix=t(matrix(rep(pred_in_ave[1,],rep1),nrow=nn, ncol=rep1))
predict_in_std=sqrt( weight%*%(predict_in_matrix-predict1_in)^2/(1-sum(weight^2)))
ylim_low= min( data2[nn1,],predict_in_std_low)-1
ylim_high= max(data2[nn1,],predict_in_std_high)+1
predict_in_std_high=pred_in_ave[1,] +predict_in_std[1,]*1.96
predict_in_std_low=pred_in_ave[1,] -predict_in_std[1,]*1.96
write.table(matrix(predict_in_std_high, ncol=length(predict_in_std_high)), "wind prediction_in_weight ave high.csv",append = FALSE, sep=",", row.names=FALSE,  col.names=FALSE)
write.table(matrix(predict_in_std_low, ncol=length(predict_in_std_low)), "wind prediction_in_weight ave low.csv",append = FALSE, sep=",", row.names=FALSE,  col.names=FALSE)
plot(nn1, data2[nn1,], ylim=c(ylim_low, ylim_high) , xlim=c(1, nn), type="l", col="blue", lwd = 2 ,ylab="Wind speed" , xlab="Hour", col.lab="blue")
title(main = "In-sample prediction (weighted mean)",col.main="red")
lines(pred_in_ave[1,], col="red",lwd = 2)
lines(predict_in_std_low, col="green",lwd = 2)
lines(predict_in_std_high, col="green",lwd = 2)
pdf("in sample weighted mean.pdf")
plot(nn1, data2[nn1,], ylim=c(ylim_low, ylim_high) , xlim=c(1, nn), type="l", col="blue", lwd = 2 ,ylab="Wind speed" , xlab="Hour", col.lab="blue")
title(main = "In-sample prediction (weighted mean)",col.main="red")
lines(pred_in_ave[1,], col="red",lwd = 2)
lines(predict_in_std_low, col="green",lwd = 2)
lines(predict_in_std_high, col="green",lwd = 2)
dev.off()
#
#
# pred_in=weight%*%predict1_in
# plot(data2[nn1,], type="l", col="blue", lwd = 2 ,ylab="Wind speed" , xlab="Hour", col.lab="blue",cex.lab=1.5  )
# title(main = "In sample prediction",col.main="red",cex.main= 1.5)
#
# lines(pred_in[1,], col="red",lwd = 2 ,  ylim=c(min(data2$exp[nn], pred_in[1,])-1,1+ max(data2$exp[nn],pred_in) , xlim=c(1, 300)  ))
#
#
#
# lines(predict_in_std_low, col="green",lwd = 2 ,  ylim=c(min(data2$exp[nn], pred_in[1,])-1,1+ max(data2$exp[nn],pred_in) , xlim=c(1, 300)  ))
#
# lines(predict_in_std_high, col="green",lwd = 2 ,  ylim=c(min(data2$exp[nn], pred_in[1,])-1,1+ max(data2$exp[nn],pred_in) , xlim=c(1, 300)  ))
#
#library(matrixStats)
#predict_in_var=colVars(predict1_in)
#predict_in_std=sqrt()
source('E:/R code NN/To the server/Rwindspeed_nnet/ws_nnet_bootstrap.R')
source('E:/R code NN/To the server/Rwindspeed_nnet/ws_nnet_bootstrap.R')
source('E:/R code NN/To the server/Rwindpower_nnet/wp_nnet_bootstrap.R')
